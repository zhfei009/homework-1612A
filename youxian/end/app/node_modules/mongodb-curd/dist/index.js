var mongo = require('mongodb');
var MongodbClient = mongo.MongoClient;
var ObjectID = mongo.ObjectID;
var urls = "mongodb://localhost:27017";

function createObjectID(data) {
    if (data._id) {
        if (typeof data._id === 'string') {
            data._id = ObjectID(data._id);
        }
    }
}
var mongodb = {
    connect: function(basename, colname, ck) {
        MongodbClient.connect(urls, { useNewUrlParser: true }, function(err, db) {
            if (err) {
                return err;
            }
            var database = db.db(basename);
            var collections = database.collection(colname);
            ck && ck(collections, db);
        })
    },
    insert: function(basename, colname, data, ck) {
        mongodb.connect(basename, colname, function(cols, db) {
            cols.insert(data, function(err, result) {
                if (err) {
                    return err;
                }
                ck && ck(result);
                db.close();
            })
        })
    },
    remove: function(basename, colname, data, ck) {
        createObjectID(data);
        mongodb.connect(basename, colname, function(cols, db) {
            cols.deleteOne(data, function(err, result) {
                if (err) {
                    return err;
                }
                ck && ck(result);
                db.close();
            })
        })
    },
    update: function(basename, colname, data, ck) {
        createObjectID(data[0]);
        createObjectID(data[1]);
        mongodb.connect(basename, colname, function(cols, db) {
            cols.update(data[0], { $set: data[1] }, function(err, result) {
                if (err) {
                    return err;
                }
                ck && ck(result);
                db.close();
            })
        })
    },
    find: function(basename, colname, data, ck, opt) { // {skip:2,limt:10}
        mongodb.connect(basename, colname, function(cols, db) {
            if (typeof data === 'function') {
                opt = ck;
                ck = data;
                data = {};
            }
            createObjectID(data);
            console.log(data);
            var skipnum = opt && opt.skip ? opt.skip * 1 : 0;
            var limit = opt && opt.limit ? opt.limit * 1 : 0;
            var sort = opt && opt.sort ? opt.sort : {};
            cols.find(data).skip(skipnum).limit(limit).sort(sort).toArray(function(err, item) {
                if (err) {
                    return err;
                }
                ck && ck(item);
                db.close();
            })

        })
    }
}

module.exports = mongodb;